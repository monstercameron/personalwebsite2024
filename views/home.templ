package views

templ HomeFullPage(quote string) {
	@Layout("Earl Cameron - Home") {
		@HomeContent(quote)
	}
}

templ HomeContent(quote string) {
	<div class="max-w-7xl mx-auto py-16 px-6">
		<!-- Page Title -->
		<div class="flex justify-center">
			<h1 class="md:w-4/5 text-6xl font-extrabold text-gray-900 text-left mb-2">Earl Cameron</h1>
		</div>
		<div class="flex justify-center">
			<h2 class="md:w-4/5 text-3xl text-gray-900 text-left mb-12">Software Engineer</h2>
		</div>
		<!-- Question of the Day -->
		<div class="p-8 rounded-lg mb-12 mx-auto text-center max-w-3xl text-gray-900">
			<p class="text-3xl font-bold">Quote of the Day</p>
			<p class="mt-4 text-xl italic">{ quote }</p>
		</div>
		<!-- Profile Photo Container -->
		<div class="flex justify-center mb-10">
			<!-- Profile Photo -->
			<div class="mt-12 md:mt-0 md:w-1/2 flex justify-center">
				<img src="/static/images/profile-sm.jpg" alt="Earl Cameron" class="w-3/5 h-auto rounded-full drop-shadow-2xl"/>
			</div>
		</div>
		<!-- Split Panel -->
		<div class="md:flex md:items-center md:justify-center md:space-x-12 mb-20">
			<!-- Text Code -->
			<div class="md:w-4/5">
				<pre class="line-numbers bg-zinc-800">
					<code id="portfolio" class="language-js">
						{ `
  // Here's our awesome async function to fetch the bio
  (async function aboutMe() {
    // Array of async functions that return parts of the bio
    const bioParts = [
      async () => "Software Engineering Leader & Educator",
      async () => "As a seasoned software engineer with a track record of success at leading tech companies, I bring a unique blend of technical expertise and leadership skills to every project.",
      async () => "My adaptability allows me to quickly master new platforms, while my proficiency in designing, coding, debugging, and testing ensures robust, efficient solutions.",
      async () => "I thrive in high-pressure team environments, leveraging strong interpersonal and communication skills to drive collaborative success.",
      async () => "My experience as an instructor underscores my commitment to knowledge sharing and mentorship.",
      async () => "I'm passionate about pushing the boundaries of software development while nurturing the next generation of tech talent.",
      async () => "Ready to bring innovation and excellence to your team."
    ];

    // Fetch all parts of the bio concurrently
    const parts = await Promise.all(bioParts.map(func => func()));

    // Join the parts with newlines and return the result
    return parts.join('\n\n');
  })(); // Immediately invoke the async function` }
					</code>
				</pre>
				<div>
					<style>
						@keyframes exaggerated-breathing {
            0%, 100% {
                transform: scale(0.95) rotate(-1deg);
                box-shadow: 0 0 0 rgba(0,0,0,0.1);
                text-shadow: 0 0 0 rgba(255,255,255,0);
                opacity: 0.7;
            }
            10% {
                transform: scale(1.02) rotate(2deg);
            }
            20% {
                transform: scale(1.06) rotate(-1.5deg);
            }
            30% {
                transform: scale(1.1) rotate(1deg);
            }
            40% {
                transform: scale(1.14) rotate(-0.5deg);
            }
            50% {
                transform: scale(1.18) rotate(0.2deg);
            }
            60% {
                transform: scale(1.2) rotate(-0.1deg);
            }
            70% {
                transform: scale(1.22);
                box-shadow: 0 0 30px rgba(0,0,0,0.6);
                text-shadow: 0 0 15px rgba(255,255,255,1);
                opacity: 1;
            }
            85% {
                transform: scale(1.1) rotate(0.5deg);
                box-shadow: 0 0 15px rgba(0,0,0,0.3);
                text-shadow: 0 0 8px rgba(255,255,255,0.6);
                opacity: 0.85;
            }
        }
        .breathing-animation {
            animation: exaggerated-breathing 5s ease-in-out infinite;
        }
        .breathing-animation:hover {
            animation: none;
            transform: scale(1.1);
            box-shadow: 0 0 20px rgba(0,0,0,0.4);
            text-shadow: 0 0 10px rgba(255,255,255,0.7);
            opacity: 0.95;
        }
						pre {
							white-space: pre-wrap; /* CSS3 */
							white-space: -moz-pre-wrap; /* Mozilla */
							white-space: -pre-wrap; /* Opera 4-6 */
							white-space: -o-pre-wrap; /* Opera 7 */
							word-wrap: break-word; /* IE */
						}
					</style>
					<button id="runcode" class="bg-gray-800 hover:bg-gray-900 text-slate-50 hover:text-slate-50 font-semibold py-4 px-6 rounded-2xl shadow-md transition-colors duration-300 breathing-animation">
						Execute aboutMe()
					</button>
					<pre style="display:none;height:400px;white-space: pre-wrap; word-wrap: break-word;" class="text-slate-50 line-numbers bg-zinc-800 transition duration-300 ">
						<code id="output" class="language-js"></code>
					</pre>
					<script defer>
    document.addEventListener('DOMContentLoaded', () => {
        const button = document.querySelector('#runcode');
        const code = document.querySelector('#portfolio');
        const output = document.querySelector('#output');

        if (button && code && output) {
            button.addEventListener('click', async () => {
                console.log("Button clicked.");
                try {
                    const result = await eval(`${code.innerText}`);
                    output.innerText = result;
                    output.parentElement.style.display = 'block';
                } catch (error) {
                    console.error("Error evaluating code:", error);
                    output.innerText = "Error evaluating code: " + error.message;
                    output.parentElement.style.display = 'block';
                }
            });
            console.log("Button listener added.");
        } else {
            console.error("Button, code, or output element not found.");
        }
    });
</script>
				</div>
			</div>
		</div>
		<!-- Call to Actions -->
		<div class="grid grid-cols-1 md:grid-cols-2 gap-6 text-center">
			<a href="/projects" hx-get="/projects" hx-target="#content" hx-push-url="true" class="bg-gray-200 hover:bg-gray-600 text-slate-700 hover:text-slate-50 font-bold py-4 px-6 rounded-2xl shadow-md transition duration-300">
				View My Projects
			</a>
			<a href="/projects" hx-get="/resume" hx-target="#content" hx-push-url="true" class="bg-gray-200 hover:bg-gray-600 text-slate-700 hover:text-slate-50 font-bold py-4 px-6 rounded-2xl shadow-md transition duration-300">
				Check Out My Resume
			</a>
		</div>
	</div>
}
